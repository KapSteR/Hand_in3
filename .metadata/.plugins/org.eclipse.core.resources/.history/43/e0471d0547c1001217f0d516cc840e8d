package iha.smap.jno10695.hand_in5;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;

import android.app.ListActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.SimpleAdapter;

public class MainActivity extends ListActivity {

	@SuppressWarnings("unchecked")
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		DatabaseHandler db = new DatabaseHandler(this);
		
		ArrayList<Map<String, String>> list = buildData();
		String[] from = { "name", "address" };
		int[] to = { android.R.id.text1, android.R.id.text2 };

		SimpleAdapter adapter = new SimpleAdapter(this, list,
				android.R.layout.simple_list_item_2, from, to);
		setListAdapter(adapter);

		// Inserting Costumers
		Log.d("Insert: ", "Inserting ..");
		db.addCostumer(new Costumer(1, "Ravi", "9100000000"));
		db.addCostumer(new Costumer(2, "Srinivas", "9199999999"));
		db.addCostumer(new Costumer(3, "Tommy", "9522222222"));
		db.addCostumer(new Costumer(4, "Karthik", "9533333333"));
		/*
		 * // Reading all costumers Log.d("Reading: ",
		 * "Reading all costumers.."); List<Costumer> costumers =
		 * db.getAllCostumers();
		 * 
		 * for (Costumer cn : costumers) { String log = "Id: " + cn.getID() +
		 * " ,Name: " + cn.getName() + " ,Phone: " + cn.getAddress(); // Writing
		 * costumers to log Log.d("Name: ", log);
		 * 
		 * 
		 * }
		 */
	}

	private ArrayList<Map<String, String>> buildData() {
		ArrayList<Map<String, String>> list = new ArrayList<Map<String, String>>();
		list.add(putData("Android", "Mobile"));
		list.add(putData("Windows7", "Windows7"));
		list.add(putData("iPhone", "iPhone"));
		return list;
	}

	private HashMap<String, String> putData(String name, String address) {
		HashMap<String, String> item = new HashMap<String, String>();
		item.put("name", name);
		item.put("address", address);
		return item;
	}

	@SuppressWarnings("unchecked")
	public void onClick(View view) {
		DatabaseHandler db = new DatabaseHandler(this);
		ArrayAdapter<Costumer> adapter = (ArrayAdapter<Costumer>) getListAdapter();
		Costumer costumer = null;
		switch (view.getId()) {
		case R.id.add:
			// Save the new comment to the database
			db.addCostumer(new Costumer(5, "BobMarley", "123456789"));
			String[] costumers = new String[] { "Cool", "Very nice", "Hate it" };
			int nextInt = new Random().nextInt(3);
			// Save the new comment to the database
			costumer = db.addCostumer(costumers[nextInt]);
			adapter.add(costumer);
			break;
		case R.id.delete:
			if (getListAdapter().getCount() > 0) {
				costumer = (Costumer) getListAdapter().getItem(0);
				db.deletecostumer(costumer);
				adapter.remove(costumer);
			}
			break;
		}
		adapter.notifyDataSetChanged();
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

}
